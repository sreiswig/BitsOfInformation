<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Bits of Information</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Home on Bits of Information</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My Interactive Globe</title>
      <link>http://localhost:1313/posts/globe_test/</link>
      <pubDate>Sun, 30 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/globe_test/</guid>
      <description>&lt;p&gt;Here is an interactive globe showing points of interest:&lt;/p&gt;&#xA;&#xA; &#xA; &#xA; &#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div id=&#34;globeViz-0&#34; style=&#34;width: 100%; height: 500px;&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;script src=&#34;//unpkg.com/three&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;//unpkg.com/globe.gl&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;script&gt;&#xA;  &#xA;  document.addEventListener(&#39;DOMContentLoaded&#39;, function () {&#xA;    &#xA;    const globeData = &#34;[{\&#34;test\&#34;:\&#34;test\&#34;}]&#34;;&#xA;&#xA;  &#xA;  if (!globeData || !Array.isArray(globeData)) {&#xA;    console.error(&#39;Globe data is missing or not an array for element #globeViz-0&#39;);&#xA;    return;&#xA;  }&#xA;&#xA;  &#xA;  const myGlobe = Globe()&#xA;    (document.getElementById(&#39;globeViz-0&#39;))&#xA;    &#xA;    .globeImageUrl(&#39;//unpkg.com/three-globe/example/img/earth-dark.jpg&#39;) &#xA;    .bumpImageUrl(&#39;//unpkg.com/three-globe/example/img/earth-topology.png&#39;)&#xA;    .backgroundColor(&#39;rgba(0,0,0,0)&#39;) &#xA;&#xA;    &#xA;&#xA;    &#xA;    .pointsData(globeData)&#xA;    .pointLabel(&#39;name&#39;) &#xA;    .pointLat(&#39;lat&#39;)    &#xA;    .pointLng(&#39;lng&#39;)    &#xA;    .pointRadius(0.2)   &#xA;    .pointAltitude(d =&gt; d.value * 0.1 + 0.01) &#xA;    .pointColor(() =&gt; &#39;rgba(255, 100, 100, 0.75)&#39;) &#xA;    .pointsTransitionDuration(1000); &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  myGlobe.onPointHover(point =&gt; {&#xA;    const elem = document.getElementById(&#39;globeViz-0&#39;);&#xA;    elem.style.cursor = point ? &#39;pointer&#39; : null;&#xA;  });&#xA;&#xA;  myGlobe.onPointClick(point =&gt; {&#xA;    &#xA;    const TILT_OFFSET = 15; &#xA;    const ALTITUDE_OFFSET_KM = 1500; &#xA;&#xA;    myGlobe.pointOfView({&#xA;      lat: point.lat,&#xA;      lng: point.lng,&#xA;      altitude: (point.value * 0.1 + 0.01) + ALTITUDE_OFFSET_KM / 6371 &#xA;    }, 1500); &#xA;&#xA;    &#xA;    console.log(&#39;Clicked on:&#39;, point.name);&#xA;    &#xA;  });&#xA;&#xA;&#xA;  &#xA;  myGlobe.controls().autoRotate = true;&#xA;  myGlobe.controls().autoRotateSpeed = 0.5;&#xA;&#xA;  &#xA;  window.addEventListener(&#39;resize&#39;, () =&gt; {&#xA;    const elem = document.getElementById(&#39;globeViz-0&#39;);&#xA;    if (elem) {&#xA;      myGlobe.width(elem.offsetWidth);&#xA;      myGlobe.height(elem.offsetHeight);&#xA;    }&#xA;  });&#xA;&#xA;  &#xA;  const elem = document.getElementById(&#39;globeViz-0&#39;);&#xA;  if (elem) {&#xA;    myGlobe.width(elem.offsetWidth);&#xA;    myGlobe.height(elem.offsetHeight);&#xA;  }&#xA;    });&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>SyCL</title>
      <link>http://localhost:1313/posts/sycl/</link>
      <pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/sycl/</guid>
      <description>&lt;h1 id=&#34;sycl-system-wide-compute-language&#34;&gt;SyCL (System-wide Compute Language)&lt;/h1&gt;&#xA;&lt;p&gt;Setup&lt;/p&gt;&#xA;&lt;p&gt;SyCL hello world&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;sycl/sycl.hpp&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hello_world&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; device_selector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sycl&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;default_selector_v;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sycl&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;queue queue(device_selector);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Running on: &amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; queue.get_device().get_info&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;sycl&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;info&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;device&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    queue.submit([&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;] (sycl&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;handler&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; cgh) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; os &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sycl&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;stream{&lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;, cgh};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cgh.single_task&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;hello_world&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;([&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;]() { &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            os &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World! (on device)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;h1 id=&#34;about&#34;&gt;About&lt;/h1&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contact/</guid>
      <description>&lt;h1 id=&#34;contact&#34;&gt;Contact&lt;/h1&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/goals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/goals/</guid>
      <description>&lt;p&gt;Goals for 2025:&#xA;Write&#xA;Make an educational video&#xA;Get a new position / job&#xA;Get better at communication&#xA;Get better at Systems Design&#xA;Make a simple typing centered game&#xA;Make an LLC&lt;/p&gt;</description>
    </item>
    <item>
      <title>RGB Server</title>
      <link>http://localhost:1313/posts/rgb_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/rgb_server/</guid>
      <description>&lt;h1 id=&#34;the-rgb-server-concept&#34;&gt;The RGB Server Concept&lt;/h1&gt;&#xA;&lt;p&gt;The RGB Server is a development server containing a consumer GPU from AMD, NVIDIA, And Intel.&#xA;Target is to be able to run Llama3.2 Vision 90B model this takes at minimum 64GB vram total.&lt;/p&gt;&#xA;&lt;p&gt;Run an optimization algorithm to find satisfiable configurations of components.&lt;/p&gt;&#xA;&lt;p&gt;Components:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;StarTech 12U Adjustable 4 Post Open Frame Server Rack&lt;/li&gt;&#xA;&lt;li&gt;SilverStone Technology RM51 5U Rackmount Server Chassis&lt;/li&gt;&#xA;&lt;li&gt;AMD Radeon Pro W6800 32GB Graphic Card | 250W Peak&lt;/li&gt;&#xA;&lt;li&gt;Sparkle Intel Arc A770 Titan OC Edition, 16GB GDDR6, ThermalSync, Torn Cooling, Axial Fan, Metal Backplate, SA770T-16GOC | 225W&lt;/li&gt;&#xA;&lt;li&gt;GeForce RTX 4060 Ti 16 GB | 165W&lt;/li&gt;&#xA;&lt;li&gt;AMD Ryzen Threadripper Pro 5955WX, 16 core, 32-Thread Desktop Processor | 280W&lt;/li&gt;&#xA;&lt;li&gt;256 GB ram&lt;/li&gt;&#xA;&lt;li&gt;1200 W power supply&lt;/li&gt;&#xA;&lt;li&gt;2 x 4 TB SSD&lt;/li&gt;&#xA;&lt;li&gt;2 X 8 TB HDD&lt;/li&gt;&#xA;&lt;li&gt;NixOS&lt;/li&gt;&#xA;&lt;li&gt;Ran into issue with install not sure what&amp;rsquo;s the cause yet&lt;/li&gt;&#xA;&lt;li&gt;All works&lt;/li&gt;&#xA;&lt;li&gt;Setup LAN Network&lt;/li&gt;&#xA;&lt;li&gt;Setup Remote Desktop on LAN only&lt;/li&gt;&#xA;&lt;li&gt;Setup sycl dev environment&lt;/li&gt;&#xA;&lt;li&gt;devenv and direnv not working automatically using rdp&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
